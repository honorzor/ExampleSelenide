plugins {
    id 'idea'
    id 'groovy'
    id "java-library"
    id "io.qameta.allure" version "2.8.1"
}

allure {
    autoconfigure = true
    aspectjweaver = true
    aspectjVersion = '1.9.4'
    version = '2.13.1'
}


repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}


group 'org.example'
version '1.0-SNAPSHOT'

configurations {
    agent
}

dependencies {
    agent 'org.aspectj:aspectjweaver:1.9.4'
    implementation('com.codeborne:selenide:5.11.1')
    testImplementation("io.qameta.allure:allure-selenide:2.13.5")
    implementation('com.github.automatedowl:allure-environment-writer:1.0.0')
    implementation('io.qameta.allure:allure-testng:2.13.3')
    implementation('org.testng:testng:7.1.0')
    implementation('io.qameta.allure:allure-java-commons:2.13.5')
    implementation('io.rest-assured:rest-assured:4.3.0')
    compile 'org.aspectj:aspectjtools:1.9.4'
    compile 'org.slf4j:slf4j-nop:1.7.25'
}


test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}
test {
    useTestNG()
    systemProperty 'allure.results.directory', 'build/allure-results'
}

apply plugin: "io.qameta.allure"
